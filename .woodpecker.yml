variables:
  - &backend_env_image  'golang:latest'
  - &docker_plugin      'woodpeckerci/plugin-docker-buildx'

steps:
  build-backend:
    image: *backend_env_image
    environment:
      - ENV=test
    commands:
      - make linux
    when:
      - event: [push, pull_request, deployment, manual]

  build-deploy-backend:
    image: *backend_env_image
    environment:
      - ENV=test
    commands:
      - make generate_all
    when:
      - event: tag

  test-backend:
    image: *backend_env_image
    environment:
      - ENV=test
    commands:
      - make test

  coverage:
    image: *backend_env_image
    environment:
      - ENV=test
    commands:
      - make coverage

  sonarqube_analysis:
    image: codeberg.org/birkenfunk/sonarscanner:latest
    environment:
      SONAR_TOKEN:
        from_secret: SONAR_TOKEN
    commands:
      - sonar-scanner -Dsonar.projectKey=SQS -Dsonar.sources=. -Dsonar.host.url=https://sonarqube.birkenfunk.de
    when:
      - event: push

  deploy:
    image: *docker_plugin
    settings:
      repo: codeberg.org/birkenfunk/sqs-external-api
      context: ./
      dockerfile: ./docker/Dockerfile
      tags:
        - ${CI_COMMIT_TAG}
        - latest
      registry: codeberg.org
      username:
        from_secret: REGISTRY_USER
      password:
        from_secret: REGISTRY_PASSWORD
    when:
      - event: tag

  publish:
    image: woodpeckerci/plugin-gitea-release
    settings:
      base_url: https://codeberg.org
      files:
        - "weather-api-linux"
        - "weather-api-windows.exe"
        - "weather-api-macos"
      api_key:
        from_secret: GITEA_ACCESS_TOKEN
      target: main
    when:
      - event: tag
  
  linting:
    image: woodpeckerci/plugin-reviewdog-golangci-lint
    settings:
      token:
        from_secret: GITEA_ACCESS_TOKEN
    when:
      - event: pull_request

services:
  - name: external-api
    image: codeberg.org/birkenfunk/sqs-external-api:latest
    ports:
      - 3000