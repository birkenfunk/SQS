variables:
  - &backend_env_image  'golang:latest'
  - &docker_plugin      'woodpeckerci/plugin-docker-buildx'

steps:
  build-backend:
    image: *backend_env_image
    environment:
      - ENV=test
    commands:
      - make linux
    when:
      - event: [push, pull_request, deployment, manual]

  build-deploy-backend:
    image: *backend_env_image
    environment:
      - ENV=test
    commands:
      - make generate_all
    when:
      - event: tag

  test-backend:
    image: *backend_env_image
    environment:
      - ENV=test
      - REDIS_ADDR=cache:6379
      - EXTERNAL_API=http://external-api:3000
    commands:
      - make test_with_coverage

  coverage:
    image: *backend_env_image
    environment:
      - ENV=test
    commands:
      - make coverage_only

  sonarqube_analysis:
    image: codeberg.org/birkenfunk/sonarscanner:latest
    environment:
      SONAR_TOKEN:
        from_secret: SONAR_TOKEN
    commands:
      - sonar-scanner -Dsonar.projectKey=SQS -Dsonar.sources=. -Dsonar.host.url=https://sonarqube.birkenfunk.de
    when:
      - event: push

  deploy:
    image: *docker_plugin
    settings:
      repo: codeberg.org/birkenfunk/sqs-external-api
      context: ./
      dockerfile: ./docker/Dockerfile
      tags:
        - ${CI_COMMIT_TAG}
        - latest
      registry: codeberg.org
      username:
        from_secret: REGISTRY_USER
      password:
        from_secret: REGISTRY_PASSWORD
    when:
      - event: tag

  deploy_latest:
    image: *docker_plugin
    settings:
      repo: codeberg.org/birkenfunk/sqs/backend
      context: ./
      dockerfile: ./docker/Dockerfile
      tags:
        - ${CI_COMMIT_BRANCH}-latest
      registry: codeberg.org
      username:
        from_secret: REGISTRY_USER
      password:
        from_secret: REGISTRY_PASSWORD
    when:
      - event: push

  test_docker:
    image: docker:26.0
    commands:
      - apk add --no-cache curl
      - docker-compose -f ci.docker-compose.yml up -d
      - docker stop sqs-backend-test || true
      - docker container rm sqs-backend-test || true
      - docker pull codeberg.org/birkenfunk/sqs/backend:${CI_COMMIT_BRANCH}-latest
      - docker run
        -e WEATHER_SERVICE_API_URL=http://external-api:3000
        -e PORT=5000
        -e REDIS_URL=cache:6379
        -p 5000:5000
        --network=sqs_default
        --name sqs-backend-test
        --rm -d codeberg.org/birkenfunk/sqs/backend:${CI_COMMIT_BRANCH}-latest
      - curl --location 'host.docker.internal:5000/api/v1/health'
      - curl --location 'host.docker.internal:5000/api/v1/weather/Berlin'
      - docker stop sqs-backend-test
      - docker-compose -f integration.docker-compose.yml down -v
  publish:
    image: woodpeckerci/plugin-gitea-release
    settings:
      base_url: https://codeberg.org
      files:
        - "build/linux/weather-proxy-linux"
        - "build/windows/weather-proxy-windows.exe"
        - "build/mac/weather-proxy-macos"
      api_key:
        from_secret: GITEA_ACCESS_TOKEN
      target: main
    when:
      - event: tag



  linting:
    image: woodpeckerci/plugin-reviewdog-golangci-lint
    settings:
      token:
        from_secret: GITEA_ACCESS_TOKEN
    when:
      - event: pull_request

  docker_linter:
    image: hadolint/hadolint:v2.12.0-alpine
    commands:
      - hadolint ./docker/Dockerfile

services:
  - name: external-api
    image: codeberg.org/birkenfunk/sqs-external-api:latest
    ports:
      - 3000
  - name: cache
    image: redis/redis-stack:7.2.0-v9
    ports:
      - 6379
      - 8001
    environment:
      - REDIS_ARGS="--requirepass mypassword"