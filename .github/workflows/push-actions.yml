name: Push Actions
on:
  push:
    branches:
      - '*'
    tags-ignore:
      - '*'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Go 1.21
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.x'
      - name: Build
        run: make linux
      - name: Archive build
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: build/


  test:
    runs-on: ubuntu-latest
    env:
      WEATHER_SERVICE_API_URL: http://localhost:3000
      PORT: 4000
      REDIS_URL: localhost:6379
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Go 1.21
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.x'
      - name: Setup Environment
        run: docker-compose -f integration.docker-compose.yml up -d
      - name: Test
        run: make test_with_coverage
      - name: Tear down
        run: docker-compose -f integration.docker-compose.yml down -v

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: build/

  sonarqube:
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v2
        - name: Download coverage
          uses: actions/download-artifact@v4
          with:
            name: coverage
            path: build/
        - run: ls -la
        - name: SonarQube Scan
          uses: sonarsource/sonarqube-scan-action@master
          env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
    needs:
      - test

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: build
          path: build/
      - run: chmod +x build/linux/weather-proxy-api-linux
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Github Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          load: true
          tags: ghcr.io/birkenfunk/sqs/backend:${{github.ref_name}}-latest
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ghcr.io/birkenfunk/sqs/backend:${{github.ref_name}}-latest'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
      - name: Start Backend
        run: docker compose -f ci.docker-compose.yml up -d
      - name: Start API
        run: docker run -e WEATHER_SERVICE_API_URL=http://external-api:3000
          -e PORT=5000
          -e REDIS_URL=cache:6379
          -p 5000:5000
          --network=sqs_default
          --name sqs-backend-test
          --rm -d ghcr.io/birkenfunk/sqs/backend:${{github.ref_name}}-latest
      - name: Test Health
        run: curl http://localhost:5000/api/v1/health
      - name: Test Weather
        run: curl http://localhost:5000/api/v1/weather/test
      - name: Stop Backend
        run: docker compose -f ci.docker-compose.yml down
      - name: Build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          load: true
          tags: ghcr.io/birkenfunk/sqs/backend:${{github.ref_name}}-latest
    needs:
      - build
      - test