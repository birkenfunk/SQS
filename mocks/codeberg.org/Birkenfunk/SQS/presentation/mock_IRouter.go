// Code generated by mockery v2.42.2. DO NOT EDIT.

package presentation

import (
	chi "github.com/go-chi/chi/v5"
	mock "github.com/stretchr/testify/mock"
)

// MockIRouter is an autogenerated mock type for the IRouter type
type MockIRouter struct {
	mock.Mock
}

type MockIRouter_Expecter struct {
	mock *mock.Mock
}

func (_m *MockIRouter) EXPECT() *MockIRouter_Expecter {
	return &MockIRouter_Expecter{mock: &_m.Mock}
}

// InitRouter provides a mock function with given fields:
func (_m *MockIRouter) InitRouter() *chi.Mux {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for InitRouter")
	}

	var r0 *chi.Mux
	if rf, ok := ret.Get(0).(func() *chi.Mux); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*chi.Mux)
		}
	}

	return r0
}

// MockIRouter_InitRouter_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'InitRouter'
type MockIRouter_InitRouter_Call struct {
	*mock.Call
}

// InitRouter is a helper method to define mock.On call
func (_e *MockIRouter_Expecter) InitRouter() *MockIRouter_InitRouter_Call {
	return &MockIRouter_InitRouter_Call{Call: _e.mock.On("InitRouter")}
}

func (_c *MockIRouter_InitRouter_Call) Run(run func()) *MockIRouter_InitRouter_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockIRouter_InitRouter_Call) Return(_a0 *chi.Mux) *MockIRouter_InitRouter_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockIRouter_InitRouter_Call) RunAndReturn(run func() *chi.Mux) *MockIRouter_InitRouter_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockIRouter creates a new instance of MockIRouter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockIRouter(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockIRouter {
	mock := &MockIRouter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
