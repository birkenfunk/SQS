// Code generated by mockery v2.42.2. DO NOT EDIT.

package handler

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// MockIWeatherHandler is an autogenerated mock type for the IWeatherHandler type
type MockIWeatherHandler struct {
	mock.Mock
}

type MockIWeatherHandler_Expecter struct {
	mock *mock.Mock
}

func (_m *MockIWeatherHandler) EXPECT() *MockIWeatherHandler_Expecter {
	return &MockIWeatherHandler_Expecter{mock: &_m.Mock}
}

// GetWeatherHandler provides a mock function with given fields: rw, r
func (_m *MockIWeatherHandler) GetWeatherHandler(rw http.ResponseWriter, r *http.Request) {
	_m.Called(rw, r)
}

// MockIWeatherHandler_GetWeatherHandler_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetWeatherHandler'
type MockIWeatherHandler_GetWeatherHandler_Call struct {
	*mock.Call
}

// GetWeatherHandler is a helper method to define mock.On call
//   - rw http.ResponseWriter
//   - r *http.Request
func (_e *MockIWeatherHandler_Expecter) GetWeatherHandler(rw interface{}, r interface{}) *MockIWeatherHandler_GetWeatherHandler_Call {
	return &MockIWeatherHandler_GetWeatherHandler_Call{Call: _e.mock.On("GetWeatherHandler", rw, r)}
}

func (_c *MockIWeatherHandler_GetWeatherHandler_Call) Run(run func(rw http.ResponseWriter, r *http.Request)) *MockIWeatherHandler_GetWeatherHandler_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request))
	})
	return _c
}

func (_c *MockIWeatherHandler_GetWeatherHandler_Call) Return() *MockIWeatherHandler_GetWeatherHandler_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockIWeatherHandler_GetWeatherHandler_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request)) *MockIWeatherHandler_GetWeatherHandler_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockIWeatherHandler creates a new instance of MockIWeatherHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockIWeatherHandler(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockIWeatherHandler {
	mock := &MockIWeatherHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
